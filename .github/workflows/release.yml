name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Format
        run: cargo fmt -- --check

      - name: Clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Test
        env:
          TASK_SH_FAKE_RESPONSE: "Command: echo ok\nExplanation: ok"
        run: cargo test --release

  build:
    needs: lint-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install cargo-zigbuild
        run: cargo install cargo-zigbuild

      - name: Build release
        env:
          OPENAI_API_KEY: dummy
          TASK_SH_FAKE_RESPONSE: "Command: echo ok\nExplanation: ok"
        run: cargo zigbuild --release --target ${{ matrix.target }}

      - name: Package binary
        shell: bash
        run: |
          artifact_dir="artifacts/${{ matrix.target }}"
          mkdir -p "$artifact_dir"
          cp target/${{ matrix.target }}/release/task* "$artifact_dir"/
          tar -C "$artifact_dir" -czf task-${{ matrix.target }}.tar.gz .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: task-${{ matrix.target }}
          path: task-${{ matrix.target }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}